"""
函数分为：无参函数和有参函数
1）无参函数：调用时不需要给函数传递参数
    def 函数名():
        # 函数中的代码

    调用：函数名()
2）有参函数：调用时需要给函数传递一下必要的参数
    def 函数名(参数1, 参数2, ...):
        # 函数中的代码

    调用：函数名(传递参数1，传递参数2)
"""

"""
需求：定义一个函数，能够计算并打印出两个数字之和
"""


# 定义一个有参函数
# 定义函数时，指定的参数叫形式参数，也叫形参
# 形参是用来占位的，表示调用函数时，需要传递几个参数的值，但是形参的值具体是什么，需要等调用函数的时候才能确定
def my_sum(num1, num2):
    """计算并打印两个数字的和"""
    result = num1 + num2
    print('结果为：', result)


# 调用有参函数
# 调用函数时，给形参传递的具体的数据叫实际参数，也叫实参
my_sum(1, 3)
my_sum(2, 4)

a = 1
b = 5
# 调用有参函数时，实参也可以用变量，表示把变量的值作为实参传递给对应函数的形参
my_sum(a, b)

# 提示用户输入数据
# c = int(input('请输入一个数字：'))
# d = int(input('请输入一个数字：'))
# my_sum(c, d)


# 调用1
# 注意：在 python 中调用有参函数时，传递的实参的数据类型是没有限制的，
# 但是传递的实参必须能够进行函数中的运算，否则函数调用会出错
my_sum('hello', 'world')

# 调用2
# TypeError: can only concatenate str (not "int") to str
# 下面的代码调用会出错，传递的实参不能进行函数中的运算(字符串和数字不能相加)
# my_sum('hello', 2)


"""
需求：定义一个函数，能够计算并打印出两个数字之差
"""


def my_sub(num1, num2):
    """计算两个数字的差"""
    result = num1 - num2
    print('结果为：', result)


my_sub(3, 1)
my_sub(6, 2)
