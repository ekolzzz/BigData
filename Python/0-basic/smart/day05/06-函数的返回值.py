"""
调用函数之后，希望获取函数内部计算的结果，这就需要用到函数的返回值。

开发中，有时会希望 一个函数执行结束后，告诉调用者一个结果，以便调用者针对具体的结果做后续的处理。
返回值 是 函数给调用方提供的结果
"""


# def my_sum(num1, num2):
#     """计算两个数字的和"""
#     result = num1 + num2
#     print('结果为：', result)
#
#
# # 调用函数
# # 注意：默认情况下，函数内部的运算结果，函数外部是不能使用的，
# # 如果想要函数外部能够拿到函数内部的运算结果，就需要使用函数的返回值
# # 函数的返回值，其实就是把函数内部的计算结果，在函数调用完成之后，
# # 返回到函数的外面，让外面可以通过变量接收到这个结果，然后可以做进一步的运算
# my_sum(2, 3)



"""
函数需要通过 return 关键字返回值： return 结果

def 函数(参数1, 参数2):
    # 函数代码...
    return 返回值
    
注意：只要函数执行了 return 代码，函数调用就结束了，
如果函数中 return 之后还有代码，代码永远不会被执行到
"""

"""
需求：计算两个数的和，并返回计算的结果
"""


def my_sum(num1, num2):
    """计算两个数字的和并返回计算的结果"""
    result = num1 + num2
    # 将函数内部的计算结果，返回到函数的外部
    return result
    # 注意：只要函数中执行了 return，就表示函数的调用完成了，return之后的代码不会被执行
    # print('函数中return之后代码')


# 调用 my_sum
# 调用函数完成之后，就可以使用一个变量接收到函数内部返回出来的结果
res = my_sum(2, 3)
print(res ** 2)



"""
函数的默认返回值(其实也可以理解为函数没有返回值)
    如果没有在函数中使用return，函数默认也有返回值，是None
    函数 return 后面什么都没有，返回值也是 None
"""


def my_sum1(num1, num2):
    """计算两个数字的和"""
    result = num1 + num2
    return


res = my_sum1(1, 3)
print(res)



"""
def 函数():
    if 条件成立:
        # 函数结束，但是又不想有返回值
        return
    
    其他代码...
    其他代码...
    其他代码...
    其他代码...
"""


# 需求：定义一个函数，计算一个数字乘以2的结果并返回，但是要求这个数字必须大于0

def func1(num1):
    """计算一个数字乘以2的结果并返回"""
    if num1 <= 0:
        print('num1必须大于0')
        return

    return num1 * 2


res = func1(3)
print(res)







