"""
while循环应用
"""
"""
需求：计算1~100的累加和（包含1和100）

_sum = 1 + 2 + 3 + 4 + ... + 99 + 100

_sum = 0
_sum += 1 -> _sum = _sum + 1 -> _sum = 1
_sum += 2 -> _sum = _sum + 2 -> _sum = 3
_sum += 3 -> _sum = _sum + 3 -> _sum = 6
_sum += 4 -> _sum = _sum + 4 -> _sum = 10
...
_sum += 99
_sum += 100
"""

# 首先写一个循环，从1循环到100
i = 1
# 定义一个变量，保存最终计算的结果，初始的值为0
_sum = 0
# i=1
# i=2
# i=3
# ...
# i=100
while i <= 100:
    _sum += i # 等价于：_sum = _sum + i
    i += 1

# 循环结束，打印最终计算的结果
print(_sum)

print('==================================')
# 首先写一个循环，从1循环到100
i = 0
# 定义一个变量，保存最终计算的结果，初始的值为0
_sum = 0

while i < 100:
    i += 1
    _sum += i

print(_sum)

print('==================================')

"""
需求：计算1~100之间偶数的累加和-方式1

_sum = 2 + 4 + 6 + 8 + ... + 98 + 100

_sum = 0
_sum += 2
_sum += 4
_sum += 6
_sum += 8
...
_sum += 98
_sum += 100
"""

i = 1
_sum = 0

while i <= 100:
    # 判断 i 是否为偶数，如果为偶数，才把i累加到变量_sum上
    # 偶数：i % 2 == 0
    if i % 2 == 0:
        _sum += i

    i += 1

print(_sum)

# 总结：第一种方式每次循环都要进行判断i是否为偶数，循环代码会重复执行100次

print('=====================================')

"""
需求：计算1~100之间偶数的累加和-方式2

_sum = 2 + 4 + 6 + 8 + ... + 98 + 100

_sum = 0
_sum += 2
_sum += 4
_sum += 6
_sum += 8
...
_sum += 98
_sum += 100
"""

i = 2
_sum = 0

while i <= 100:
    _sum += i
    i += 2

print(_sum)

# 总结：第二种方式每次循环不需要判断i是否为偶数，而且循环代码只会重复执行50次










